{"version":3,"sources":["img/waldo-1.jpeg","components/Timer.js","components/Header.js","components/Dropdown.js","components/Message.js","firebase.js","App.js","components/Highscores.js","index.js"],"names":["Timer","props","seconds","Math","floor","time","slice","minutes","useEffect","interval","timerOn","setInterval","setTime","prevTime","clearInterval","className","Header","style","color","characterState","map","char","found","opacity","name","src","image","alt","Dropdown","charLocations","gameDimensions","userX","userCoords","userY","dropdownLocation","onClick","character","find","charact","width","coords","x","height","y","handleMessage","setToggleMessageBox","setTimeout","setToggleDropdown","handleFound","checkForMatch","Message","message","toggleInput","onSubmit","handleSubmit","onChange","handleInputChange","value","userName","type","placeholder","maxLength","required","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","a","getDocs","collection","forEach","doc","id","data","push","getChars","Highscores","getHighScores","topScores","user","index","handleResetGame","gameImage","require","charState","App","useState","toggleDropdown","setCharacterState","setUserCoords","toggleMessageBox","setMessage","setToggleInput","setTimerOn","setUserName","showHighScores","setShowHighScores","setTopScores","toggleResetGame","setToggleResetGame","state","gameStart","highScores","sort","b","topTen","handleTopScores","scores","msg","default","e","target","getBoundingClientRect","clientX","left","clientY","top","every","existingScores","filter","length","gameEnd","preventDefault","numberSeconds","timeString","newHighScore","setDoc","merge","addHighScore","sec","getTimeString","previous","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26088ce5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/waldo-1.9736162a.jpeg\";","// Timer.js\n\nimport React, { useEffect } from \"react\";\n\nconst Timer = (props) => {\n  let seconds = (\"0\" + (Math.floor(props.time / 1000) % 60)).slice(-2);\n  let minutes = (\"0\" + (Math.floor(props.time / 60000) % 60)).slice(-2);\n\n  useEffect(() => {\n    let interval = null;\n    if (props.timerOn) {\n      interval = setInterval(() => {\n        props.setTime((prevTime) => prevTime + 1000);\n      }, 1000);\n    } else if (!props.timerOn) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [props.timerOn]);\n\n  return (\n    <div className=\"Timer\">\n      <div className=\"Timer-name\">\n        <h1>Time:&nbsp;</h1>\n      </div>\n      <div className=\"Timer-minutes\">\n        <h1>{minutes}</h1>\n      </div>\n      <div className=\"Timer-separator\">\n        <h1>:</h1>\n      </div>\n      <div className=\"Timer-seconds\">\n        <h1>{seconds}</h1>\n      </div>\n    </div>\n  );\n};\n\nconst getTimeString = (sec) => {\n  let seconds = (\"0\" + (Math.floor(sec / 1000) % 60)).slice(-2);\n  let minutes = (\"0\" + (Math.floor(sec / 60000) % 60)).slice(-2);\n  let string = minutes + \":\" + seconds;\n  return string;\n};\n\nexport default Timer;\nexport { getTimeString };\n","// Header.js\n\nimport React from \"react\";\nimport Timer from \"./Timer\";\n\nconst Header = (props) => {\n  return (\n    <div className=\"Header\">\n      <div className=\"Header-title\">\n        <div>\n          <h1>\n            <span style={{ color: \"red\" }}>Where's </span>\n            <span style={{ color: \"#1da1f2\" }}>Waldo?</span>\n          </h1>\n        </div>\n        <p>A project coded with React and Firebase</p>\n      </div>\n      <h3>Left to find:</h3>\n      {props.characterState.map((char) => (\n        <div\n          key={char.name}\n          className=\"Header-char\"\n          style={char.found ? { opacity: 0.2 } : { opacity: 1 }}\n        >\n          <p>{char.name}</p>\n          <img src={char.image} alt={char.name} />\n        </div>\n      ))}\n      <Timer\n        timerOn={props.timerOn}\n        time={props.time}\n        setTime={props.setTime}\n      />\n    </div>\n  );\n};\n\nexport default Header;\n","// Dropdown.js\n\nimport React from \"react\";\n\nconst Dropdown = (props) => {\n  const charLocations = props.charLocations;\n  const gameDimensions = props.gameDimensions;\n  let userX = props.userCoords[0];\n  let userY = props.userCoords[1];\n\n  let dropdownLocation = {};\n  dropdownLocation[\"--dropdown-left\"] = userX + 20 + \"px\";\n  dropdownLocation[\"--dropdown-top\"] = userY + 90 + \"px\";\n\n  const checkForMatch = (char) => {\n    let character = charLocations.find((charact) => charact.name === char);\n    if (\n      userX > gameDimensions.width * character.coords.x * 0.92 &&\n      userX < gameDimensions.width * character.coords.x * 1.08 &&\n      userY > gameDimensions.height * character.coords.y * 0.92 &&\n      userY < gameDimensions.height * character.coords.y * 1.08\n    ) {\n      props.handleMessage(\"You found \" + character.name + \"!\");\n      props.setToggleMessageBox(true);\n      setTimeout(() => {\n        props.setToggleMessageBox(false);\n        props.setToggleDropdown(false);\n        props.handleFound(character.name);\n      }, 1500);\n    } else {\n      props.handleMessage(\"That's not \" + character.name + \"!\");\n      props.setToggleMessageBox(true);\n      setTimeout(() => {\n        props.setToggleMessageBox(false);\n        props.setToggleDropdown(false);\n      }, 1500);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"Dropdown\" style={dropdownLocation}>\n        <div className=\"Dropdown-table\">\n          {props.characterState.map((char) => {\n            return !char.found ? (\n              <div\n                key={char.name}\n                className=\"Dropdown-row\"\n                onClick={() => checkForMatch(char.name)}\n              >\n                <img src={char.image} alt={char.name} />\n                <p>{char.name}</p>\n              </div>\n            ) : (\n              false\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","// Message.js\n\nimport React from \"react\";\n\nconst Message = (props) => {\n  return (\n    <div className=\"Message-container\">\n      <div className=\"Message-box\">\n        <h2>{props.message}</h2>\n        {props.toggleInput && (\n          <form onSubmit={props.handleSubmit}>\n            <input\n              onChange={props.handleInputChange}\n              value={props.userName}\n              type=\"text\"\n              placeholder=\"Enter your name...\"\n              maxLength={12}\n              required={true}\n            ></input>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n","// firebase.js\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { doc, setDoc } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDibCxXn_EsXjSIDfEsD2Dq1ZjZuiLhwtM\",\n  authDomain: \"wheres-waldo-82629.firebaseapp.com\",\n  projectId: \"wheres-waldo-82629\",\n  storageBucket: \"wheres-waldo-82629.appspot.com\",\n  messagingSenderId: \"1042527864001\",\n  appId: \"1:1042527864001:web:9b010bf07fabab106e0040\",\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nlet charLocations = [];\n\nconst getChars = async (db) => {\n  const querySnapshot = await getDocs(collection(db, \"characters\"));\n  querySnapshot.forEach((doc) => {\n    let char = {};\n    char.name = doc.id;\n    char.coords = doc.data();\n    charLocations.push(char);\n  });\n  return charLocations;\n};\n\ngetChars(db);\n\nconst addHighScore = (user, numberSeconds, timeString) => {\n  const newHighScore = doc(db, \"highscores\", user);\n  setDoc(\n    newHighScore,\n    { name: user, seconds: numberSeconds, time: timeString },\n    { merge: true }\n  );\n};\n\nexport { db, charLocations, addHighScore };\n","// App.js\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Dropdown from \"./components/Dropdown\";\nimport Message from \"./components/Message\";\nimport Highscores from \"./components/Highscores\";\nimport { getTimeString } from \"./components/Timer\";\nimport { db, charLocations, addHighScore } from \"./firebase\";\nimport { getDocs, collection } from \"@firebase/firestore\";\n\nconst gameImage = require(\"./img/waldo-1.jpeg\");\n// const imageWaldo = require(\"./img/waldo-1.png\");\n// const imageWenda = require(\"./img/wenda-1.png\");\n// const imageWizard = require(\"./img/wizard-1.png\");\n// const imageOdlaw = require(\"./img/odlaw-1.png\");\n\nconst charState = [\n  {\n    name: \"Waldo\",\n    found: false,\n    // image2: imageWaldo,\n    image: \"/img/waldo-1.png\",\n  },\n  {\n    name: \"Wenda\",\n    found: false,\n    // image2: imageWenda,\n    image: \"/img/wenda-1.png\",\n  },\n  {\n    name: \"Wizard\",\n    found: false,\n    // image2: imageWizard,\n    image: \"/img/wizard-1.png\",\n  },\n  {\n    name: \"Odlaw\",\n    found: false,\n    // image2: imageOdlaw,\n    image: \"/img/odlaw-1.png\",\n  },\n];\n\nlet gameDimensions;\n\nconst App = () => {\n  const [toggleDropdown, setToggleDropdown] = useState(false);\n  const [characterState, setCharacterState] = useState(charState);\n  const [userCoords, setUserCoords] = useState([]);\n  const [toggleMessageBox, setToggleMessageBox] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [toggleInput, setToggleInput] = useState(false);\n  const [timerOn, setTimerOn] = useState(false);\n  const [time, setTime] = useState(0);\n  const [userName, setUserName] = useState(\"\");\n  const [showHighScores, setShowHighScores] = useState(false);\n  const [topScores, setTopScores] = useState([]);\n  const [toggleResetGame, setToggleResetGame] = useState(false);\n\n  useEffect(() => {\n    getHighScores(db);\n    setShowHighScores(false);\n    setToggleMessageBox(false);\n    setCharacterState((state) => {\n      const characters = state.map((char) => {\n        char.found = false;\n        return char;\n      });\n      return characters;\n    });\n    setTime(0);\n    gameStart();\n    setTimeout(() => {\n      setTimerOn(true);\n    }, 1500);\n  }, [toggleResetGame]);\n\n  const gameStart = () => {\n    handleMessage(\"Find the characters!\");\n    setToggleMessageBox(true);\n    setTimeout(() => {\n      setToggleMessageBox(false);\n    }, 2000);\n  };\n\n  const gameEnd = () => {\n    setTimerOn(false);\n    let existingScores = topScores.filter((user) => {\n      if (user.seconds) {\n        return user;\n      } else return false;\n    });\n    if (time / 1000 < existingScores[existingScores.length - 1].seconds) {\n      handleMessage(\"Nice work! A new high score!\");\n      setToggleMessageBox(true);\n      setToggleInput(true);\n    } else {\n      setShowHighScores(true);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addHighScore(userName, time / 1000, getTimeString(time));\n    setUserName(\"\");\n    setToggleInput(false);\n    setToggleMessageBox(false);\n    handleMessage(\"\");\n    setShowHighScores(true);\n  };\n\n  const getHighScores = async (db) => {\n    let highScores = [];\n    const querySnapshot = await getDocs(collection(db, \"highscores\"));\n    querySnapshot.forEach((doc) => {\n      let user = doc.data();\n      highScores.push(user);\n    });\n    highScores.sort((a, b) => a.seconds - b.seconds);\n    let topTen = highScores.slice(0, 10);\n    handleTopScores(topTen);\n  };\n\n  const handleTopScores = (scores) => {\n    setTopScores(scores);\n  };\n\n  const handleMessage = (msg) => {\n    setMessage(msg);\n  };\n\n  const handleFound = (name) => {\n    setCharacterState((state) => {\n      const characters = state.map((char) => {\n        if (char.name === name) {\n          char.found = true;\n          return char;\n        } else {\n          return char;\n        }\n      });\n      return characters;\n    });\n    if (characterState.every((char) => char.found === true)) {\n      gameEnd();\n    }\n  };\n\n  const handleClick = (e) => {\n    if (timerOn) {\n      gameDimensions = e.target.getBoundingClientRect();\n      let x = e.clientX - gameDimensions.left; //x position within the element.\n      let y = e.clientY - gameDimensions.top; //y position within the element.\n      setUserCoords([x, y]);\n      toggleDropdown ? setToggleDropdown(false) : setToggleDropdown(true);\n    } else return;\n  };\n\n  const handleResetGame = () => {\n    setToggleResetGame((previous) => !previous);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        characterState={characterState}\n        timerOn={timerOn}\n        time={time}\n        setTime={setTime}\n      />\n      <img src={gameImage.default} alt=\"Not found\" onClick={handleClick} />\n      {toggleDropdown && (\n        <Dropdown\n          characterState={characterState}\n          setToggleDropdown={setToggleDropdown}\n          userCoords={userCoords}\n          charLocations={charLocations}\n          gameDimensions={gameDimensions}\n          setToggleMessageBox={setToggleMessageBox}\n          handleMessage={handleMessage}\n          handleFound={handleFound}\n        />\n      )}\n      {toggleMessageBox && (\n        <Message\n          message={message}\n          toggleInput={toggleInput}\n          handleInputChange={handleInputChange}\n          handleSubmit={handleSubmit}\n          userName={userName}\n        />\n      )}\n      {showHighScores && (\n        <Highscores\n          getHighScores={getHighScores}\n          topScores={topScores}\n          handleResetGame={handleResetGame}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// Highscores.js\n\nimport React, { useEffect } from \"react\";\nimport { db } from \"../firebase\";\n\nconst Highscores = (props) => {\n  useEffect(() => {\n    props.getHighScores(db);\n  }, []);\n\n  return (\n    <div className=\"Message-container\">\n      <div className=\"Message-box\">\n        <h2>High Scores</h2>\n        <div className=\"Highscores\">\n          {props.topScores.map((user, index) => (\n            <div key={user.name} className=\"Highscores-user\">\n              <h3>{index + 1}</h3>\n              <h3>{user.name}</h3>\n              <h3>{user.time}</h3>\n            </div>\n          ))}\n        </div>\n        <button className=\"reset\" onClick={() => props.handleResetGame()}>\n          Play again!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Highscores;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/style.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}